generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Creator {
  id           String  @id @db.Uuid
  displayName  String  @map("display_name")
  nickname     String  @unique
  thumbnailUrl String? @map("thumbnail_url")
  Videos       Video[]

  @@map("creators")
}

model Video {
  id                    String           @id @db.Uuid
  creatorId             String           @map("creator_id") @db.Uuid
  Creator               Creator          @relation(fields: [creatorId], references: [id])
  title                 String
  description           String?
  tags                  String?
  thumbnailUrl          String?          @map("thumbnail_url")
  previewThumbnailUrl   String?          @map("preview_thumbnail_url")
  visibility            VideoVisibility
  isPublishedWithPublic Boolean          @map("is_published_with_public")
  status                VideoStatus
  createdAt             DateTime         @map("created_at") @db.Timestamptz(6)
  statusUpdatedAt       DateTime?        @map("status_updated_at") @db.Timestamptz(6)
  Metrics               VideoMetrics?
  ProcessedVideos       ProcessedVideo[]

  @@index([creatorId])
  @@index([visibility])
  @@index([createdAt])
  @@map("videos")
}

model ProcessedVideo {
  id            String @id @default(uuid()) @db.Uuid
  videoFileId   String @map("video_file_id") @db.Uuid
  videoId       String @map("video_id") @db.Uuid
  Video         Video  @relation(fields: [videoId], references: [id])
  label         String
  width         Int
  height        Int
  size          BigInt
  lengthSeconds Int    @map("length_seconds")
  url           String

  @@index([videoId])
  @@map("processed_videos")
}

model VideoMetrics {
  videoId             String    @id @map("video_id") @db.Uuid
  Video               Video     @relation(fields: [videoId], references: [id])
  viewsCount          BigInt    @map("views_count")
  viewsCountUpdatedAt DateTime? @map("views_count_updated_at") @db.Timestamptz(6)

  @@map("videos_metrics")
}

enum VideoStatus {
  Preparing
  Ready
  Published
  Unregistered

  @@map("video_statuses")
}

enum VideoVisibility {
  Private
  Unlisted
  Public

  @@map("video_visibilities")
}
